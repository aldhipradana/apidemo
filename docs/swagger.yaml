basePath: /
definitions:
  schemas.Notes:
    properties:
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  schemas.NotesDTO:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  schemas.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  schemas.UserDTO:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: This is a sample server for API Demo.
  title: API Demo Swagger API
  version: "1.0"
paths:
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete notes
      parameters:
      - description: Notes ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete notes
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Get notes by ID
      parameters:
      - description: Notes ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Notes'
      summary: Get notes by ID
      tags:
      - Notes
    put:
      consumes:
      - application/json
      description: Update notes
      parameters:
      - description: Notes ID
        in: path
        name: id
        required: true
        type: string
      - description: Notes
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/schemas.NotesDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Notes'
      summary: Update notes
      tags:
      - Notes
  /notes/create:
    post:
      consumes:
      - application/json
      description: Create notes
      parameters:
      - description: Notes
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/schemas.NotesDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Notes'
      summary: Create notes
      tags:
      - Notes
  /notes/list:
    post:
      consumes:
      - application/json
      description: List notes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.Notes'
            type: array
      summary: List notes
      tags:
      - Notes
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
      summary: Get user by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
      summary: Update user
      tags:
      - User
  /user/create:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
      summary: Create user
      tags:
      - User
  /user/list:
    post:
      consumes:
      - application/json
      description: List users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.User'
            type: array
      summary: List users
      tags:
      - User
swagger: "2.0"
